//https://www.geeksforgeeks.org/queue-set-2-linked-list-implementation/
//time complexity for enqueue and dequeue operation is O(1)

class Node{
    Node next;
    int data;
    
    Node(int data){
        this.data = data;
    }
}

public class Queue{
    Node front, rear;
    
    Queue(){
        front=rear=null;
    }
    
    public void enqueue(int data){
        Node temp = new Node(data);
        
        if(rear == null){
            front = rear = temp;
            return;
        }
        rear.next = temp;
        rear = temp;
    }
    
    public Node deQueue(){
        if(front == null){
            return null;
        }
        
        Node temp = front;
        front = front.next;
        
        if(front == null){
            rear = null;
        }
        return temp;
    }
    
    public static void main(String[] args){
        Queue queue = new Queue();
        queue.enqueue(10);
        queue.enqueue(20);
        queue.enqueue(30);
        System.out.println(queue.deQueue().data);
        System.out.println(queue.deQueue().data);
    }
}
